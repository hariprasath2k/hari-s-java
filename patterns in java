public class Pattern {
    public static void main(String[] args) {
      //  Scanner input=new Scanner(System.in);
        //System.out.println("Enter no of lines:");
         //int n=input.nextInt();
         pattern3(5);
    }
    static void pattern3(int n) {
        // Print pyramid pattern
        for (int row = 0; row < n; row++) {
            int totalColsInRow = row + 1;
            int noOfSpaces = n - totalColsInRow;
            for (int s = 0; s < noOfSpaces; s++) {
                System.out.print(" "); // Print spaces on the same line
            }
            for (int col = 0; col < totalColsInRow; col++) {
                System.out.print("* "); // Print stars on the same line
            }
            System.out.println(); // Move to the next line
        }

        // Print reverse pyramid pattern
        for (int row = n - 2; row >= 0; row--) {
            int totalColsInRow = row + 1;
            int noOfSpaces = n - totalColsInRow;
            for (int s = 0; s < noOfSpaces; s++) {
                System.out.print(" "); // Print spaces on the same line
            }
            for (int col = 0; col < totalColsInRow; col++) {
                System.out.print("* "); // Print stars on the same line
            }
            System.out.println(); // Move to the next line
        }
    }
    static void pattern2(int n){
        for (int row = 0; row <=2*n; row++) {
            int Colinrow=row>n ? 2*n-row:row;
            for (int col=0;col<Colinrow;col++){
                System.out.print("* ");
            }
            System.out.println(" ");

        }
    }

    static void pattern1(int n) {
        for (int row = 1; row <= n; row++) {
// for every row, run the col
            for (int col = 1; col <= n+1-row; col++) {
                System.out.print("* ");
            }
            System.out.println();
// when one row is printed, we need to add a newline
        }
    }
}
